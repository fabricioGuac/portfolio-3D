/* Variables for the colors */
:root {
  --heafoo-bg-color: #8B4513;
  --heafoo-border-color: #5A3213; 
  --tree-color: #A45B17;
  --tree-color-dark: #843C02;
}

 * {
  /* Removes default margin */
  margin: 0;
  /* Removes default padding */
  padding: 0;
  /* Includes padding and border in the element's total width and height */
  box-sizing: border-box;
}

header {
  /* Sets the background color for a wood-like theme */
  background-color: var(--heafoo-bg-color);
  /* Sets the text color to ensure contrast againts the background */
  color: white;
  /* Establishes a flexbox layout to arrange elements in a row */
  display: flex;
  /* Centers the items vertically */
  align-items: center;
  /* Adds padding around the header content */
  padding: 1rem;
  /* Makes the header stick to the top of the viewport during scrolling */
  position: sticky;
  /* Specifies the position for the header when sticky */
  top: 0;
  /* Sets the width to take 100% of the viewport width */
  width: 100%;
  /* Gives the header a bottom border to create a clear separation from the content */
  border-bottom: 5px solid var(--heafoo-border-color);
}

footer {
  /* Specifies the exact position for the header when sticky */
  background-color: var(--heafoo-bg-color); 
  /* Sets the text color to match the header style */
  color: white;
  /* Centers the text horizontally */
  text-align: center;
  /* Give the footer a top border to create a clear separation from the content */
  border-top: 5px solid var(--heafoo-border-color);
  /* Gives the footer a fixed position to ensure it sticks to the bottom */
  position: fixed;
  /* Positions the footer at the bottom of the viewport */
  bottom: 0;
  /* Sets the width to take 100% of the viewport width */
  width: 100%;
}

header h1 {
  /* Sets the flex-grow factor to take up remaining space and maintain the h1 centered */
  flex-grow: 1;
  /* Centers the text horizontally */
  text-align: center;
  /* Sets the font size to make the title more prominent */
  font-size: 2rem;
  /* Applies bold weight to emphasize the header title */
  font-weight: bold;
  /* Offsets the title to account for the space taken by the back button */
  margin-left: -3rem;
}

footer h3 {
  /* Adds space below h3 to separate it visually from the icons */
  margin-bottom: 0.5rem;
  /* Sets the font size for readibility */
  font-size: 1.4rem;
}

.back-btn {
  /* Sets the text color to white to ensure contrast against the background */
  color: white;
  /* Sets the font size to 1 rem for consistent text sizing */
  font-size: 1rem;
  /* Removes the default underline from links for a cleaner button appearance */
  text-decoration: none;
  /* Applies padding to increase clickable area and improve aesthetics */
  padding: 0.5rem 1rem;
  /* Sets the background color to be slightly darker than the header for visual dinstinction */
  background-color: #5A3213;
  /* Rounds the corners of the button */
  border-radius: 5px;
  /* Ensures the button appears above other elements */
  z-index: 1;
  /* Positions the button relative to its normal position, allowing overlap with other elements */
  position: relative;
  /* Defines a smooth transition effect for background color on hover */
  transition: background-color 0.3s ease;
}

.back-btn:hover {
  /* Darkens the button background color on hover */
  background-color: #4E2B10; 
  /* Styles the cursor as a pointer on hover */
  cursor: pointer;
}

.icons a {
  /* Colors the icons white to match the footer theme */
  color: white;
  /* Increases the icons sizefor better visibility */
  font-size: 2.5rem;
  /* Sets the distance between the icons */
  margin: 0 0.5rem;
  /* Defines a transition effect for the transform property on hover */
  transition: transform 0.3s ease;
  /* Allows the icons to be treated as inline-block for proper spacing and alignment */
  display: inline-block;
}

.icons a:hover {
  /* Increases the size of the icons on hover */
  transform: scale(1.3);
}

.islanLabel {
  /* Sets the font size for the island labels */
  font-size: 24px;
  /* Sets the font family for the island labels */
  font-family: Arial, sans-serif;
  /* Sets the padding around teh label */
  padding: 5px;
  /* Gives rounded corners for the labels */
  border-radius: 5px;
}

.sceneContainer {
  /* Sets a fixed position to cover the viewport */
  position: fixed;
  /* Aligns to the top of the viewport */
  top: 0;
  /* Aligns to the left of the viewport */
  left: 0;
  /* Sets if to the full width of the viewport */
  width: 100vw;
  /* Sets if to the full height of the viewport */
  height: 100vh;
  /* Hides any overflowing content */
  overflow: hidden;
}




.controlsOverlay {
  /* Positions the element absolutly within its nearest positioned ancestor*/
  position: absolute;
  /* Sets the top edge of the overlay to align with the top edge of the viewport */
  top: 0;
  /* Sets the left edge of the overlay to align with the left edge of the viewport */
  left: 0;
  /* Sets the width of the overlay to 100% of the viewport width */
  width: 100%;
  /* Sets the height of the overlay to 100% of the viewport height */
  height: 100%;
  /* Sets the z index to 2 ensuring the contents appear above other elements  */
  z-index: 2;

}


.instructions {
  /* Positions the element absolutly within its nearest positioned ancestor*/
  position: absolute;
  /* Sets the instructions to 10% down from the top of it's contaiener */
  top: 10%;
  /* Sets the instructions to 50% of the left meaning horizontal center */
  left: 50%;
  /* Ensures the center of the instructions aligns with the center of the container */
  transform: translate(-50%, -50%);
  /* Aligns the text in the horizontal center of the container */
  text-align: center;
  /* Adds 1 em of padding arround the content insed the instructions box */
  padding: 1em;
  /* Sets a translucent dark background */
  background-color: rgba(0, 0, 0, 0.7); 
  /* Sets the text color to white */
  color: white;
  /* Slightly rounds the corners of the instructions box */
  border-radius: 8px;
}



.joystick {
  /* Positions the element absolutly within its nearest positioned ancestor*/
  position: absolute;
  /* Sets the joystick 50 pixels from the bottom of it's container */
  bottom: 50px;
  /* Sets the joystixj 60 pixels from the left edge of it's container */
  left: 60px;
  /* Sets the width of the joystick area to 100 pixels */
  width: 100px;
  /* Sets the heigh of the joystick area to 100 pixels */
  height: 100px;
  /* Sets a translucent gray background */
  background-color: rgba(128, 128, 128, 0.6); 
  /* Creates a circular shape */
  border-radius: 50%;
  /* Enables flexbox layout for the joystick */
  display: flex;
  /* Centers the items horizontally within the joystick area */
  justify-content: center;
  /* Centers the items vertically within the joystick area */
  align-items: center;
}

.joystick-inner {
  /* Positions the element absolutly within its nearest positioned ancestor*/
  position: absolute;
  /* Sets the width of the joystick inner to 30 pixels */
  width: 30px;
  /* Sets the height of the joystick inner to 30 pixels */
  height: 30px;
  /* Sets the background color to white */
  background-color: white;
  /* Creates a circular shape */
  border-radius: 50%;
}

.form-container {
  /* Sets the background to a dark brown, resembling a wooden desk */
  background-color: #582d0b;
  /* Enables flexbox layout to center the form */
  display: flex;
  /* Horizontally centers the form */
  justify-content: center;
  /* Vertically centers the form */
  align-items: center;
  /* Sets height to 90% of the viewport */
  height: 90vh;
}

.form {
  /* Light yellow background for an old paper look */
  background-color: #fcedc5;
  /* Dark brown border to define the paper edges */
  border: 2px solid #5b3a29;
  /* Adds padding arpund the form content */
  padding: 2rem;
  /* Shadow for depth and separation from background */
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
  /* Limits the form to 500 pixels */
  max-width: 500px;
  /* Ensures the form takes full width within it's container */
  width: 100%;
  /* Antique look font for the form text */
  font-family: 'Allura', cursive;
  /* Dark text color for readability */
  color: #333;
  /* Sets a larger font size for visibility */
  font-size: 2rem;
}

.form-group {
  /* Adds sace below each form field for separation */
  margin-bottom: 1rem;
}

.form-label {
  /* Ensures the labels appear on their own line above inputs */
  display: block;
  /* Adds space below the label for readability */
  margin-bottom: 1.2rem;
}

.input-field {
  /* Full width for the input fields */
  width: 100%;
  /* Paddding within the input for comfortable typing space */
  padding: 0.7rem;
  /* Dark brown border for contrast */
  border: 1px solid #5b3a29;
  /* Slightly rounds the corners */
  border-radius: 5px;
  /* Sets a larger font size for visibility */
  font-size: 2rem;
  /* Light yellow background color for a different old paper effect */
  background-color: #fdf6e3;
  /* Antique look font for the form text */
  font-family: 'Allura', cursive;
}

.input-field:focus {
  /* Removes default blue outline on focus */
  outline: none;
  /* Highlights border color when input is active */
  border-color: #d9b26b ;
}

.error-message {
  /* Red color to indicate error */
  color: #be2d28;
  /* Centers error message text */
  text-align: center;
  /* Adds space below the error message */
  margin-bottom: 1.2rem;
}

.success-message {
  /* Green color to indicate success */
  color: #35be28;
  /* Centers success message text */
  text-align: center;
  /* Adds space below the success message */
  margin-bottom: 1.2rem;
}

.submit-button {
  /* Dark backround for the button */
  background-color: #5b3a29;
  /* White text for good contrast */
  color: white;
  /* Padding for larger clickable area */
  padding: 0.7rem 1.3rem;
  /* Removes default border */
  border : none;
  /* Slightly rounds the corners */
  border-radius: 5px;
  /* Gives it a pointer cursor to indicate its clickable */
  cursor: pointer;
  /* Slightly smaller font size for button text */
  font-size: 1.2rem;
  /* Full width button for emphasis */
  width: 100%;
}

.submit-button:hover {
  /* Lighter color on hover to show interactivity */
  background-color: #d9b26b ;
}


.sea-island {
  /* Sets a radial gradient background to mimic an 'island in the sea' effect */
  background-image: radial-gradient(circle, #ddce76 50%, #00bcd4 60%, #0096b2 80%, #006994);
  /* Defines height relative to the viewport for consistent layout scaling */
  height: 87vh;
  /* Enables flex layout to center the project items */
  display: flex;
  /* Allows flex items to wrap onto multiple lines on smaller screens */
  flex-wrap: wrap;
  /* Centers the project items horizontally */
  justify-content: center;
  /* Centers the project items vertically */
  align-items: center;
  /* Adds padding to the container */
  padding: 2rem;
}

.project-item {
  /* Sets the width of each project item to 50% of the container minus 2rem for spacing */
  width: calc(50% - 2rem);
  /* Limits the maximum width of the project items to 20rem */
  max-width: 20rem; 
  /* Sets the spacing between each project item */
  margin: 0 1rem;
  /* Rounds the corners of the project items */
  border-radius: 10px;
  /* Adds a shadow effect to create depth for the project items */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  /* Defines a smooth transition effect for hover states */
  transition: all 0.3s ease;
  /* Shows pointer cursor on hover */
  cursor: pointer;
}


.project-img {
  /* Sets the width of the images to 100% of it's container width */
  width: 100%;
  /* Sets the height of the images to 100% of it's container height */
  height: 100%;
  /* Defines a smooth transistion effect for the opacity */
  transition: opacity 0 0.5s ease;
}

.project-name-tag {
  /* Absolute positioning to place the tag inside the project item */
  position: absolute;
  /* Sets the distance from the bottom of the item */
  bottom: 2rem;
  /* Centers the tag horizontally */
  left: 50%;
  /* Centers the element by shifting it left by half its width */
  transform: translateX(-50%);
  /* Translucent background for the tag */
  background-color: rgba(0, 0, 0, 0.6);
  /* Text color for contrast with the background */
  color: white;
  /* Sets padding around text */
  padding: 1rem 2rem;
  /* Sets font size for better readibility */
  font-size: 2rem;
  /* Slightly rounds the corners */
  border-radius: 5px;
  /* Hides it by default */
  opacity: 0;
  /* Defines a smooth fade-in transition */
  transition: opacity 0.5 ease;
}

.project-item:hover .project-name-tag {
  /* Makes it visible on hover */
  opacity: 1;
}

.project-item:hover {
  /* Slightly increases the size on hover */
  transform: scale(1.05);
}

.project-item:hover .project-img {
  /* Slightly decreases opacity of the image on hover for a focus effect */
  opacity: 0.7;
}

.modal {
  /* Sets the position to fixed, allowing the modal to stay in view */
  position: fixed;
  /* Centers the modal vertically by positioning it 50% from the top */
  top: 50%;
  /* Centers the modal horizontally by positioning it 50% from the left */
  left: 50%;
  /* Offsets the modal by half its width and height to achieve perfect centering */
  transform: translate(-50%, -50%);
  /* Sets the modal background color */
  background-color: white;
  /* Adds padding for improved spacing inside the modal */
  padding: 2rem;
  /* Adds a shadow effect to the modal for better contrast */
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  /* Sets the z index to 10 to ensure it is above every other element */
  z-index: 10;
  /* Sets the width to 80% of the parent container */
  width: 80%;
  /* Limits the maximum width to 500 pixels */
  max-width: 500px;
  /* Slightly rounds the corners */
  border-radius: 5px;
  /* Centers the text in the modal */
  text-align: center;
}

.modal button {
  /* Sets the space around the button */
  margin: 1rem;
  /* Sets the inner padding to the button */
  padding: 1rem;
  /* Sets the background color for the button */
  background-color: #d40000;
  /* Sets the text color for the button */
  color: white;
  /* Removes the default border from the button */
  border: none;
  /* Changes the cursor to a pointer to indicate interactivity */
  cursor: pointer;
}

.modal a {
  /* Makes link occupy full line */
  display: block;
  /* Sets the space above the link  */
  margin-top: 5px;
  /* Sets the a tag links to a blue color */
  color: #00bcd4;
  /* Removes default underline */
  text-decoration: none;
}

.beach {
  /* Sets a linear gradient background to create a beach effect */
  background-image: linear-gradient(360deg, rgba(224,180,107,1) 60%, rgb(60, 168, 187) 70%);
  /* Defines height relative to the viewport for consistent layout scaling */
  height: 90vh;
  /* Sets the text color to white for contrast againts the background */
  color: white;
  /* Enables flex layout */
  display: flex;
  /* Centers the childrens horizontally */
  justify-content: center;
  /* Centers the childrens vertically */
  align-items: center;
  /* Positions childrens relative to thie container */
  position: relative;
  /* Adds padding around the content inside the container */
  padding: 1rem;
  /* Hides any overflowing content */
  overflow: hidden;
} 

.curved-trunk {
  /* Positions the trunk absolutely within it's container */
  position: absolute;
  /* Ensures the trunk is at the bottom of it's container */
  bottom: 0;
  /* Positions the trunk slightly to the right of it's container */
  right: 10%;
  /* Sets the width of the trunk responsive to the viewport */
  width: 5vw; 
  /* Prevents the trunk from getting too thin */
  min-width: 40px;
  /* Extends the trunk beyond the container's height */
  height: 110vh;
  /* Creates a pattern for the trunk */
  background: repeating-radial-gradient(circle at top,
    var(--tree-color),
    var(--tree-color) 7vw,
    var(--tree-color-dark) 7vw,
    var(--tree-color-dark) 8vw
  );
  /* Rounds the trunk to give it a natural curved look */
  border-radius: 50% 0 0 50%; 
  /* Tilts the trunk for a leaning palm tree effect */
  transform: rotate(-45deg); 
  /* Adds a shadow to give depth to the trunk */
  box-shadow: inset 0 0 1rem rgba(0, 0, 0, 0.5);
}


.coconut {
  /* Sets a brown background to mimic a coconut */
  background-color: #793d13;
  /* Defines a consistent circular shape */
  width: 4rem; 
  height: 4rem;
  /* Makes the coconut round */
  border-radius: 50%;
  /* Adds a shadow for a 3D */
  box-shadow: inset 0 0 1rem rgba(0, 0, 0, 0.5);
  /* Positions the coconut absolutely within it's container */
  position: absolute;
}


/* Positions the coconuts */
.coconut-1 {
  bottom: 13rem; left: 2rem; 
}
.coconut-2 { 
  bottom: 15rem; left: 4rem; 
}
.coconut-3 { 
  bottom: 13rem; left: 6rem; 
}



.about-me-text {
  /* Positions the text relative within it's container */
  position: relative;
  /* Ensures the text appears above other elements */
  z-index: 1;
  /* Centers the text horizontally */
  text-align: center;
  /* Sets the font size for readibility */
  font-size: 1.5rem;
  /* Sets the font family */
  font-family: 'Lora', serif;
  /* Adds a translucent background for readbility */
  background: rgba(0, 0, 0, 0.4);
  /* Sets the padding around the text content */
  padding: 1.5rem;
  /* Round the corners of the container */
  border-radius: 10px;
  /* Limits the width for readability */
  max-width: 800px; 
  /* Centers text box and adds vertical spacing */
  margin: 2rem auto;
}


.skills-chest {
  /* Sets a brown background to create a wood-like theme */
  background-color: #5A3213; 
  /* Defines the minimum height relative to the viewport for consistent layout scaling */
  min-height: 90vh; 
  /* Adds padding to the container */
  padding: 2rem;
  /* Sets the text color to white */
  color: white;
  /* Enables flex layout */
  display: flex;
  /* Arranges flex items vertically */
  flex-direction: column;
}


.skills-groups {
  /* Enables flex layout */
  display: flex;
  /* Allows flex items to wrap and adjust based on the screen size */
  flex-wrap: wrap;
  /* Sets the gap between the items for better spacing */
  gap: 1.5rem; 
  /* Centers the items horizontally within the container */
  justify-content: center;
  /* Allows the items to take up the full width of their container */
  width: 100%;
}


.skill-group {
  /* Gives the skill group a darker background for contrast against the container */
  background-color: #3A2008; 
  /* Sets padding within the skill group for spacing */
  padding: 1rem;
  /* Slightly rounds the corners */
  border-radius: 8px;
  /* Sets a shadow for styling and depth */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  /* Defines the width of each skill group  */
  width: 620px;
  /* Centers the text within the skill group */
  text-align: center;
}


.skill-group h2 {
  /* Sets the font size for better readability */
  font-size: 1.7rem;
  /* Defines bottom margin for proper spacing between the title and the list */
  margin-bottom: 0.5rem;
}

.skill-group ul {
  /* Removes the default list decoration (bullets) for a cleaner look */
  list-style: none;
}

.skill-group li {
  /* Sets a gold-like color for the treasure chest theme */
  color: #d4af37; 
  /* Sets the font size for better readibility */
  font-size: 1.5rem;
}


.resume-link {
  /* Centers the text within the container */
  text-align: center;
  /* Allows minor adjustments to the element's position without removing it from the document flow */
  position: relative;
  /* Moves the elemet 10 pixels up */
  top: -10px;
  /* Sets the margin for the resume link */
  margin: 1rem 0 3rem 0; 
}

.resume-link a {
  /* Makes the download link gold */
  color: #d4af37;
}

.resume-link a:hover {
  /* Changes the link color to a brighter gold on hover to indicate interactivity */
  color: #ffd700; 
}


/* Media query for mobile devices in portrait orientation */
@media (max-width: 768px) and (orientation: portrait) {
  .sceneContainer {
    /* Rotates the scene for landscape view */
    transform: rotate(90deg);
    /* Sets the rotation point to the center */
    transform-origin: center;
    /* Sets the width to viewport height for proper scaling */
    width: 100vh;
    /* Sets height to viewport width for propper scaling */
    height: 100vw;
    /* Centers vertically */
    top: 50%;
    /* Centers horizontally */
    left: 50%;
    /* Translates to center and rotates */
    transform: translate(-50%, -50%) rotate(90deg);
  }


  .instructions {
    /* Centers the instructions box after rotation */
    transform: translate(-50%, -50%) rotate(90deg);
    /* Sets the intructions 20% down of it's containing element */
    top: 20%; 
    /* Sets the instruction 90% left of it's containing element */
    left: 90%;
    /* Sets the width of the instructions to 70% of  the viewport */
    width: 70vw; 
    /* Limits the maximum width of the instructions to 300 pixels */
    max-width: 300px; 
    /* Limits the minimum width of the instructions to 200 pixels */
    min-width: 200px; 
}

.instructions h1 {
    /* Sets the font size for the heading */
    font-size: 16px; 
    /* Sets the line height for better readability */
    line-height: 1.2em;
}

.about-me-text {
  /* Reduces the padding */
  padding: 0.1rem;
  /* Sets it 10% above from the bottom */
  bottom: 10%;
}

}


/* Media query specifically for the iPad Mini in portrait orientation */
@media (min-width: 768px) and (max-height: 1024px) {
  .sceneContainer {
    /* Resets transformation */
    transform: none;
    /* Allows auto width */
    width: auto;
    /* Allows auto height */
    height: auto;
    /* Resets top alignment */
    top: auto; 
    /* Resets left alignment */
    left: auto; 
    /* Resets translation */
    transform: translate(0, 0);
  }
}